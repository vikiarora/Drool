package com.sample.rules
 
import com.pef.AwardContractMain.ControlParameters;
import com.pef.contract.Contract;
import java.lang.Float;

global java.lang.String testMsg;
global Float totalCapacity; 

rule "Rule_FilterByCity"

    when
        $contract : Contract( $contractId:contractId, $capacity:capacity, $price:price, city != ControlParameters.cityPreferred ) 
    then 
        //System.out.println("Inside Contract Test0 : Id" + $contractId +"::" + $capacity +"::"+ $price);
        //System.out.println("Inside Contract Test0");
        retract( $contract );
        
end

rule "Rule_AllocateByPrice"
	
    when
        $contract : Contract($contractId:contractId, $capacity:capacity, $price:price ) 
        not Contract( price < $price)
    then
    	if (ControlParameters.LEFT_CAPACITY == 0){
    		 System.out.println("\nContract Awarded based upon Minimum Price to meet Total Capacity of " + 
    			ControlParameters.MAX_CAPACITY );
    		System.out.println("Contract_ID    Capacity     Price");
    	}
		//System.out.println(ControlParameters.MAX_CAPACITY + " Capacity : Left Capacity " + ControlParameters.LEFT_CAPACITY);	
		float newCapacity =  $capacity;
		if ((ControlParameters.LEFT_CAPACITY + newCapacity) > ControlParameters.MAX_CAPACITY) newCapacity =  ControlParameters.MAX_CAPACITY - ControlParameters.LEFT_CAPACITY;	
    	if (ControlParameters.LEFT_CAPACITY < ControlParameters.MAX_CAPACITY) System.out.println("Id" + $contractId +"   ::   " + newCapacity +"   ::    "+ $price);
    	ControlParameters.LEFT_CAPACITY = ControlParameters.LEFT_CAPACITY + $capacity; 
        retract( $contract );
        
end

rule "ContractTest2"
 
    when
        $contract : Contract($contractId:contractId, $capacity:capacity, $price:price )
        not Contract( capacity < $capacity)
    then
        System.out.println("Contract list sorted with Capacity : Contractor Id - " + $contractId +"::" + $capacity +"::"+ $price); 
        retract( $contract );
        
end

